<?xml version="1.0"?>
<robot name ="mobile_robot" xmlns:xacro="http://www.ros.org/wiki/xacro">

<!--body dumentions -->

<xacro:property name="body_link_x_dim" value="1"/>
<xacro:property name="body_link_y_dim" value="0.6"/>
<xacro:property name="body_link_z_dim" value="0.3"/>


<!--wheel dimensions and location-->
<xacro:property name="wheel_link_radius" value="0.15"/>
<xacro:property name="wheel_link_length" value="0.1"/>
<xacro:property name="wheel_link_z_location" value="-0.1"/>

<!--caster wheel-->
<xacro:property name="caster_link_radius" value="0.15"/>
<xacro:property name="caster_link_z_location" value="-0.1"/>


<!--Material density-->
<xacro:property name="body_density" value="2710.0"/>
<xacro:property name="caster_density" value="2710.0"/>
<xacro:property name="wheel_density" value="2710.0"/>


<!--pi const-->
<xacro:property name="pi_const" value="3.14159265"/>

<!--robot body mass, wheel mass, caster mass-->
<xacro:property name="body_mass" value="${body_density*body_link_x_dim*body_link_y_dim*body_link_z_dim}"/>
<xacro:property name="caster_mass" value="${caster_density*(4.0/3.0)*pi_const*caster_link_radius*caster_link_radius*caster_link_radius}"/>
<xacro:property name="wheel_mass" value="${wheel_density*pi_const*wheel_link_radius*wheel_link_radius*wheel_link_radius}"/>


<!--Moment of inertia of the wheel-->
<xacro:property name="Iz_wheel" value="${0.5*wheel_mass*wheel_link_radius*wheel_link_radius}"/>
<xacro:property name="I_wheel" value="${(1.0/12.0)*wheel_mass*(3.0*wheel_link_radius*wheel_link_radius+wheel_link_length*wheel_link_length)}"/>


<!--moment of inertia of the caster sphear-->
<xacro:property name="I_caster" value="${(2.0/5.0)*caster_mass*caster_link_radius*caster_link_radius}"/>


<!--inertial sections of the wheel in a macro-->
<!--macro help in making parts of code reusable-->
<xacro:macro name="inertia_wheel" >
    <inertial>
    <origin rpy="0 0 0" xyz="0 0 0"/>
    <mass value="${wheel_mass}"/>
    <inertia ixx="${I_wheel}" ixy="0.0" ixz="0.0" iyy="${I_wheel}" iyz="0" izz="${Iz_wheel}"/>
    </inertial>
</xacro:macro>

<!--inertia of caster-->
<xacro:macro name="inertia_caster" >
    <inertial>
    <origin rpy="0 0 0" xyz="0 0 0"/>
    <mass value="${caster_mass}"/>
    <inertia ixx="${I_caster}" ixy="0.0" ixz="0.0" iyy="${I_caster}" iyz="0" izz="${I_caster}"/><!--inertia tensser-->
    </inertial>
</xacro:macro>


<!--defining gazebo actions and motion control drive-->
<xacro:include filename="$(find mobile_robot_controller)/model/robot.gazebo" />

<!--###############################-->

<!--DEFINING LINKS AND JOINTS-->


<!--dummy links and joints-->
<link name="dummy">
</link>
<joint name="dummy_joint" type="fixed">
   <parent link="dummy"/>
   <child link="body_link"/>
</joint>

<!--DUMMY BODY LINK-->


<!--BODY LINK-->
<link name="body_link">
    <visual>
        <geometry>
            <box size="${body_link_x_dim} ${body_link_y_dim} ${body_link_z_dim}" />
        </geometry>
        <origin rpy="0 0 0" xyz="0 0 0"/>
        
    </visual>

    <collision>
        <geometry>
            <box size="${body_link_x_dim} ${body_link_y_dim} ${body_link_z_dim}" />
        </geometry>
        <origin rpy="0 0 0" xyz="0 0 0"/>
    </collision>

    <inertial>
        <origin rpy="0 0 0" xyz="0 0 0"/>
        <mass value="${body_mass}"/>
        <inertia 
            ixx="${(1/12)*body_mass*(body_link_y_dim*body_link_y_dim + body_link_z_dim*body_link_z_dim)}" 
            ixy="0" 
            ixz="0"
            iyy="${(1/12)*body_mass*(body_link_x_dim*body_link_x_dim + body_link_z_dim*body_link_z_dim)}" 
            iyz="0"
            izz="${(1/12)*body_mass*(body_link_x_dim*body_link_x_dim + body_link_y_dim*body_link_y_dim)}" />
    </inertial>
</link>

<!--END OF BODY LINK-->


<!--wheel joint nad link -->
<!--WHEEL JOINT-->
<joint name ="wheel1_joint" type="continuous">
    <parent link="body_link"/>
    <child link="wheel1_link"/>
    <origin xyz="${-2*wheel_link_radius} ${-body_link_y_dim/2-wheel_link_length/2} ${wheel_link_z_location}" rpy="0 0 0"/>
    <axis xyz ="0 1 0"/>
    <limit effort="1000" velocity="1000"/>
    <dynamics damping="1.0" friction="1.0"/>
</joint>

<!--wheel link-->
<link name="wheel1_link">
    <visual>
        <origin rpy="1.570795 0 0" xyz="0 0 0" />
        <geometry>
            <cylinder length="${wheel_link_length}" radius="${wheel_link_radius}"/>
        </geometry>
        
    </visual>

    <collision>
        <origin rpy="1.570795 0 0" xyz="0 0 0" />
        <geometry>
            <cylinder length="${wheel_link_length}" radius="${wheel_link_radius}"/>
        </geometry>
    </collision>

    <xacro:inertia_wheel/>
</link>

<!--2ND WHEEL-->
<!--JOINT-->
<joint name ="wheel2_joint" type="continuous">
    <parent link="body_link"/>
    <child link="wheel2_link"/>
    <origin xyz="${-2*wheel_link_radius} ${body_link_y_dim/2+wheel_link_length/2} ${wheel_link_z_location}" rpy="0 0 0"/>
    <axis xyz ="0 1 0"/>
    <limit effort="1000" velocity="1000"/>
    <dynamics damping="1.0" friction="1.0"/>
</joint>

<!--LINK-->
<link name="wheel2_link">
    <visual>
        <origin rpy="1.570795 0 0" xyz="0 0 0" />
        <geometry>
            <cylinder length="${wheel_link_length}" radius="${wheel_link_radius}"/>
        </geometry>
        
    </visual>

    <collision>
        <origin rpy="1.570795 0 0" xyz="0 0 0" />
        <geometry>
            <cylinder length="${wheel_link_length}" radius="${wheel_link_radius}"/>
        </geometry>
    </collision>

    <xacro:inertia_wheel/>
</link>



<!--CASTER WHEEL remains fixed-->
<joint name="caster_joint" type="fixed">
    <parent link="body_link"/>
    <child link="caster_link"/>
    <origin xyz="${2*caster_link_radius} 0 ${caster_link_z_location}" rpy="0 0 0"/>
</joint>


<!--LINK-->
<link name="caster_link">
    <visual>
        <origin rpy="0 0 0" xyz="0 0 0" />
        <geometry>
            <sphere radius="${caster_link_radius}"/>
        </geometry>
        
    </visual>

    <collision>
        <origin rpy="0 0 0" xyz="0 0 0" />
        <geometry>
            <sphere radius="${caster_link_radius}"/>
        </geometry>
    </collision>
    <xacro:inertia_caster/>
</link>

</robot>